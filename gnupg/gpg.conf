# Source: https://eligible.com/blog/commit-signing-with-git-hub-keybase-and-gpg/
###################################
######### Basic Options ###########
###################################

# If you have more than 1 secret key in your keyring, you may want to
# uncomment the following option and set your preferred keyid.
# The default key to sign with. If this option is not used, the default key is
# the first key found in the secret keyring

# default-key 0x

# When verifying a signature made from a subkey, ensure that the cross
# certification "back signature" on the subkey is present and valid.
# This protects against a subtle attack against subkeys that can sign.
# Defaults to --no-require-cross-certification.  However for new
# installations it should be enabled.

require-cross-certification

# Note that future version of GnuPG will change to UTF-8 as default character set.

charset utf-8

# Some old Windows platforms require 8.3 filenames.  If your system
# can handle long filenames, uncomment this.

no-mangle-dos-filenames

# Try to use the GnuPG-Agent. With this option, GnuPG first tries to connect to
# the agent before it asks for a passphrase.

use-agent

###################################
######## Keyserver Options ########
###################################

# GnuPG can send and receive keys to and from a keyserver.  These
# servers can be HKP, email, or LDAP (if GnuPG is built with LDAP
# support).

# keyserver hkp://pgp.mit.edu

# Common options for keyserver functions

# keyserver-options auto-key-retrieve

# Don't leak DNS, see https://trac.torproject.org/projects/tor/ticket/2846

# keyserver-options no-try-dns-srv

# When using --refresh-keys, if the key in question has a preferred keyserver
# URL, then disable use of that preferred keyserver to refresh the key from

# keyserver-options no-honor-keyserver-url

# When searching for a key with --search-keys, include keys that are marked on
# the keyserver as revoked

# keyserver-options include-revoked

# Automatic key location
#
# GnuPG can automatically locate and retrieve keys as needed using the
# auto-key-locate option.  This happens when encrypting to an email
# address (in the "user@example.com" form), and there are no
# user@example.com keys on the local keyring.  This option takes the
# arguments in the order they are to be tried

# Try CERT, then PKA, then LDAP, then hkp://keys.gnupg.net:

# auto-key-locate cert pka keyserver


###################################
######## Display Options ##########
###################################


#When signing keys, always ask for the certification level

ask-cert-level

# Disable inclusion of the version string in ASCII armored output

no-emit-version

# Disable comment string in clear text signatures and ASCII armored messages

no-comments

# Display long key IDs

keyid-format 0xlong

# List all keys (or the specified ones) along with their fingerprints

with-fingerprint

# Display the calculated validity of user IDs during key listings

list-options show-uid-validity
list-options show-policy-urls
list-options show-keyserver-urls
verify-options show-uid-validity
verify-options show-policy-urls

###################################
######## Crypto Options ###########
###################################

# message digest algorithm used when signing a key

cert-digest-algo SHA512

# This preference list is used for new keys and becomes the default for
# "setpref" in the edit menu

default-preference-list SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed

# list of personal digest preferences. When multiple ciphers are supported by
# all recipients, choose the strongest one

personal-digest-preferences SHA512 SHA384 SHA256 SHA224

# list of personal cipher preferences. When multiple ciphers are supported by
# all recipients, choose the strongest one

personal-cipher-preferences AES256 AES192 AES CAST5
